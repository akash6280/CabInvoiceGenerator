/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.bridgelabz.cabinvoicegenerator;

import com.bridgelabz.cabinvoicegenerator.Ride.RideType;

public class CabInvoiceGenerator {
	private static final double NORMAL_MINIMUM_COST_PER_KM = 10;
	private static final int NORMAL_COST_PER_TIME = 1;
	private static final double NORMAL_MINIMUM_FARE = 5;
	InvoiceService invoiceservice = new InvoiceService();
	
	private static final double PREMIUM_MINIMUM_COST_PER_KM = 20;
	private static final int PREMIUM_COST_PER_TIME = 2;
	private static final double PREMIUM_MINIMUM_FARE = 20;
	
	public double calculateFare(double distance, int time,RideType rideType) {
		if(rideType.equals(RideType.NORMAL_RIDE)) {
			double totalFare = distance * NORMAL_MINIMUM_COST_PER_KM+ time *NORMAL_COST_PER_TIME;
			return Math.max(totalFare, NORMAL_MINIMUM_FARE);
		}
		else{
				double totalFare = distance * PREMIUM_MINIMUM_COST_PER_KM+ time *PREMIUM_COST_PER_TIME;
				return Math.max(totalFare, PREMIUM_MINIMUM_FARE);
			}
	}

	public double calculateFare(Ride rides[]) {
		double totalFare = 0;
		for(Ride ride:rides) {
			totalFare += this.calculateFare(ride.distance,ride.time,ride.rideType);
		}
		return totalFare;

	}

	public InvoiceSummary getSummary(Ride[] rides) {
		
		return new InvoiceSummary(rides.length,calculateFare(rides));
	}

	public InvoiceSummary getSummaryByUserId(String userId) {
		
		
		Ride[] ridesArray = new Ride[invoiceservice.getRidesList(userId).size()];
		ridesArray = invoiceservice.getRidesList(userId).toArray(ridesArray);
		return getSummary(ridesArray);
	}
}
